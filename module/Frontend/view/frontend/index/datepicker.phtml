<?php
// --- PHP LOGIC (No changes needed here, remains the same) ---
$dateStartClone = clone $this->dateStart;

// 1. Previous Day URL
$dateStartClone->modify('-1 day');
$previousDayUrlQuery = ['date' => $dateStartClone->format('Y-m-d')];
if ($this->squaresFilter) {
    $previousDayUrlQuery['squares'] = $this->squaresFilter;
}
$previousDayUrl = $this->url('frontend', [], ['query' => $previousDayUrlQuery]);

// 2. Current Date Values (Reset clone to original date)
$dateStartClone->modify('+1 day');
$currentDayForAlpine = $this->dateStart->format('Y-m-d');
$displayDayForAlpine = $this->dateFormat($this->dateStart, IntlDateFormatter::MEDIUM);

// 3. Next Day URL
$dateStartClone->modify('+1 day');
$nextDayUrlQuery = ['date' => $dateStartClone->format('Y-m-d')];
if ($this->squaresFilter) {
    $nextDayUrlQuery['squares'] = $this->squaresFilter;
}
$nextDayUrl = $this->url('frontend', [], ['query' => $nextDayUrlQuery]);

// 4. Today URL
$todayUrlQuery = ['date' => $this->dateNow->format('Y-m-d')];
if ($this->squaresFilter) {
    $todayUrlQuery['squares'] = $this->squaresFilter;
}
$todayUrl = $this->url('frontend', [], ['query' => $todayUrlQuery]);
?>

<!-- Style block for brand color -->
<style>
    :root {
        --brand-color-tennis: #c6ff00;
        --brand-color-tennis-dark: #5c7700;
    }
</style>

<!--
    ENHANCED MODERN DATE PICKER COMPONENT
-->
<div
    x-data="{
      /* --- CONFIGURATION --- */
      weekStartsOnMonday: true, // Set to false to start the week on Sunday

      /* --- STATE --- */
      open: false,
      value: '<?= $currentDayForAlpine ?>',
      displayValue: '<?= $displayDayForAlpine ?>',
      month: '',
      year: '',
      daysInMonth: [],
      blankDays: [],
      monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
      dayNames: [],

      init() {
        // Populate day names based on config
        this.dayNames = this.weekStartsOnMonday 
            ? ['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su'] 
            : ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'];
        
        // Use 'T00:00:00' to avoid timezone issues
        let today = new Date('<?= $currentDayForAlpine ?>T00:00:00');
        this.month = today.getMonth();
        this.year = today.getFullYear();
        this.getDays();
      },

      isToday(day) {
        const today = new Date();
        const d = new Date(this.year, this.month, day);
        return today.toDateString() === d.toDateString();
      },

      isSelected(day) {
        const d = new Date(this.year, this.month, day);
        return this.value === this.formatDate(d);
      },

      selectDate(day) {
        let selectedDate = new Date(this.year, this.month, day);
        this.value = this.formatDate(selectedDate);
        this.displayValue = new Intl.DateTimeFormat('en-US', { dateStyle: 'medium' }).format(selectedDate);
        this.open = false;

        // Auto-submit the form
        this.$nextTick(() => {
            document.getElementById('date-picker-form').submit();
        });
      },

      getDays() {
        const days = new Date(this.year, this.month + 1, 0).getDate();
        // JS getDay(): 0-Sun, 1-Mon, ..., 6-Sat
        const firstDayOfWeek = new Date(this.year, this.month, 1).getDay();

        let blankDaysCount = 0;
        if (this.weekStartsOnMonday) {
            // Adjust so Monday is 0, Sunday is 6
            blankDaysCount = (firstDayOfWeek === 0) ? 6 : firstDayOfWeek - 1;
        } else {
            // Sunday is 0, so no adjustment needed
            blankDaysCount = firstDayOfWeek;
        }

        this.blankDays = Array(blankDaysCount).fill(null);
        this.daysInMonth = Array.from({ length: days }, (_, i) => i + 1);
      },

      changeMonth(amount) {
        let newDate = new Date(this.year, this.month);
        newDate.setMonth(newDate.getMonth() + amount);
        this.year = newDate.getFullYear();
        this.month = newDate.getMonth();
        this.getDays();
      },

      formatDate(date) {
        const year = date.getFullYear();
        const month = ('0' + (date.getMonth() + 1)).slice(-2);
        const day = ('0' + date.getDate()).slice(-2);
        return `${year}-${month}-${day}`;
      }
    }"
    x-cloak>
    <!-- The main form that contains all elements -->
    <form id="date-picker-form" method="get" action="<?= $this->url('frontend') ?>" class="flex items-center justify-center space-x-2 p-2 bg-gray-50 rounded-lg border">

        <!-- Hidden inputs for form submission -->
        <input type="hidden" name="date" x-model="value">
        <?php if ($this->squaresFilter): ?>
            <input type="hidden" name="squares" value="<?= $this->e($this->squaresFilter) ?>">
        <?php endif; ?>

        <!-- Previous Day Button -->
        <a href="<?= $previousDayUrl ?>" title="Previous Day" class="flex items-center justify-center w-10 h-10 rounded-full text-gray-500 hover:bg-gray-200 transition-colors">
            <svg class="w-6 h-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5" />
            </svg>
        </a>

        <!-- Today Button -->
        <a href="<?= $todayUrl ?>" class="px-4 h-10 flex items-center justify-center rounded-md text-gray-700 bg-white border border-gray-300 hover:bg-gray-100 transition-colors text-sm font-semibold">
            <?= $this->t('Today') ?>
        </a>

        <!-- Date Picker Input and Dropdown -->
        <!-- Dropdown Panel -->
        <!-- Header: Month/Year and Navigation -->
        <!-- Days of the Week (now dynamic) -->
        <!-- Calendar Days Grid -->
        <div class="relative">
            <div
                @click="open = !open"
                class="relative w-40 h-10 flex items-center justify-between px-3 bg-white border border-gray-300 rounded-md cursor-pointer">
                <span x-text="displayValue" class="text-sm text-gray-800"></span>
                <svg class="w-5 h-5 text-gray-400" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" d="M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0h18" />
                </svg>
            </div>


            <div
                x-show="open"
                @click.outside="open = false"
                x-transition
                class="absolute top-full mt-2 w-72 bg-white p-4 rounded-lg shadow-xl border z-10">

                <div class="flex items-center justify-between mb-4">
                    <button @click="changeMonth(-1)" type="button" class="p-1.5 rounded-full hover:bg-gray-100">
                        <svg class="w-5 h-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5 8.25 12l7.5-7.5" />
                        </svg>
                    </button>
                    <div class="text-center font-semibold text-gray-800">
                        <span x-text="monthNames[month]"></span>
                        <span x-text="year"></span>
                    </div>
                    <button @click="changeMonth(1)" type="button" class="p-1.5 rounded-full hover:bg-gray-100">
                        <svg class="w-5 h-5 text-gray-500" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                            <path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5" />
                        </svg>
                    </button>
                </div>

                <div class="grid grid-cols-7 gap-1 mb-2 text-center text-xs text-gray-500 font-medium">
                    <template x-for="day in dayNames" :key="day">
                        <div x-text="day"></div>
                    </template>
                </div>


                <div class="grid grid-cols-7 gap-1">
                    <template x-for="d in blankDays">
                        <div></div>
                    </template>
                    <template x-for="day in daysInMonth" :key="day">
                        <div
                            @click="selectDate(day)"
                            class="h-8 w-8 flex items-center justify-center text-sm rounded-full cursor-pointer transition-colors"
                            :class="{
                                'bg-[var(--brand-color-tennis)] text-[var(--brand-color-tennis-dark)] font-bold': isSelected(day),
                                'hover:bg-gray-200': !isSelected(day),
                                'ring-1 ring-[var(--brand-color-tennis)]': isToday(day) && !isSelected(day)
                            }"
                            x-text="day"></div>
                    </template>
                </div>
            </div>
        </div>

        <!-- Next Day Button -->
        <a href="<?= $nextDayUrl ?>" title="Next Day" class="flex items-center justify-center w-10 h-10 rounded-full text-gray-500 hover:bg-gray-200 transition-colors">
            <svg class="w-6 h-6" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" d="m8.25 4.5 7.5 7.5-7.5 7.5" />
            </svg>
        </a>
    </form>
</div>