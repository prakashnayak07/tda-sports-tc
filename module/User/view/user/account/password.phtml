<?php

$this->setup(array(
    'title' => 'Forgot your password?',
    'panel' => 'centered-panel',
    'messages' => array(
        'success' => $this->passwordMessage,
    ),
    'back' => true,
    'links' => array(
        'Login' => $this->url('user/login'),
    ),
));

?>
<!DOCTYPE html>
<html lang="<?= $this->config('i18n.locale') ?>">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><?= $this->option(['client.name.short', 'service.name.full']) ?> - Forgot Password</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <script>
        tailwind.config = {
            theme: {
                extend: {
                    colors: {
                        brand: '#93b353',
                        'brand-dark': '#b0c817',
                    },
                    fontFamily: {
                        sans: ['Inter', 'system-ui', 'sans-serif'],
                    },
                }
            }
        }
    </script>
</head>

<body class="bg-gray-50 font-sans antialiased">
    <div class="min-h-screen flex items-center justify-center p-4">
        <div class="w-full max-w-sm bg-white rounded-lg shadow-sm overflow-hidden">
            <!-- Content -->
            <div class="p-8 text-center">
                <div class="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
                    <i class="ph ph-lock-key text-3xl text-blue-600"></i>
                </div>
                <h2 class="text-xl font-semibold text-gray-900 mb-2"><?= $this->t('Forgot Password?') ?></h2>
                <p class="text-gray-600 mb-6"><?= $this->t('No worries! Enter your email and we\'ll send you a reset link.') ?></p>

                <!-- Success Message -->
                <?php if ($this->passwordMessage): ?>
                    <div class="bg-green-50 border border-green-200 rounded-lg p-4 mb-6 flex items-start gap-3">
                        <i class="ph ph-check-circle text-green-500 mt-0.5"></i>
                        <div class="text-green-800 text-sm">
                            <?= $this->passwordMessage ?>
                        </div>
                    </div>
                <?php endif; ?>

                <!-- Password Reset Form -->
                <?php
                $form = $this->passwordForm;
                $form->setAttribute('method', 'post');
                $form->setAttribute('action', $this->url('user/password'));
                $form->prepare();
                ?>
                <?= $this->form()->openTag($form) ?>

                <div class="space-y-6">
                    <!-- Email Field -->
                    <div>
                        <label for="email" class="block text-sm font-medium text-gray-700 mb-2"><?= $this->t('Email Address') ?></label>
                        <div class="relative">
                            <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none text-gray-400">
                                <i class="ph ph-envelope"></i>
                            </div>
                            <?= $this->formElement(
                                $form->get('pf-email')
                                    ->setAttribute('id', 'email')
                                    ->setAttribute('type', 'email')
                                    ->setAttribute('autocomplete', 'email')
                                    ->setAttribute('required', 'required')
                                    ->setAttribute('placeholder', 'your@email.com')
                                    ->setAttribute('class', 'w-full pl-10 pr-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-brand focus:border-brand outline-none transition')
                            ) ?>
                        </div>
                        <?php if ($form->get('pf-email')->getMessages()): ?>
                            <div class="mt-2 text-sm text-red-600 flex items-center gap-1">
                                <i class="ph ph-warning text-xs"></i>
                                <span><?= implode(', ', $form->get('pf-email')->getMessages()) ?></span>
                            </div>
                        <?php endif; ?>
                    </div>

                    <!-- Submit Button -->
                    <button type="submit" class="w-full bg-brand hover:bg-brand-dark text-white font-medium py-3 px-6 rounded-lg transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-brand flex items-center justify-center gap-2">
                        <i class="ph ph-paper-plane-right"></i>
                        <?= $this->t('Send Reset Link') ?>
                    </button>
                </div>

                <?= $this->form()->closeTag() ?>

                <!-- Login Link -->
                <div class="mt-6 text-center">
                    <a href="<?= $this->url('user/login') ?>" class="text-brand hover:text-brand-dark text-sm transition-colors">
                        <?= $this->t('Remember your password?') ?> <?= $this->t('Back to login') ?>
                    </a>
                </div>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Add subtle animations
            const elements = document.querySelectorAll('.bg-gray-50, .bg-white');
            elements.forEach((element, index) => {
                element.style.opacity = '0';
                element.style.transform = 'translateY(20px)';
                element.style.transition = 'opacity 0.6s ease, transform 0.6s ease';

                setTimeout(() => {
                    element.style.opacity = '1';
                    element.style.transform = 'translateY(0)';
                }, index * 100);
            });

            // Add hover effects to buttons
            const buttons = document.querySelectorAll('a[href], button[type="submit"]');
            buttons.forEach(button => {
                button.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-1px)';
                });

                button.addEventListener('mouseleave', function() {
                    this.style.transform = 'translateY(0)';
                });
            });

            // Form validation feedback
            const emailInput = document.getElementById('email');
            if (emailInput) {
                emailInput.addEventListener('blur', function() {
                    const email = this.value.trim();
                    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;

                    if (email && !emailRegex.test(email)) {
                        this.classList.add('border-red-500');
                        this.classList.remove('border-green-500');
                    } else if (email && emailRegex.test(email)) {
                        this.classList.add('border-green-500');
                        this.classList.remove('border-red-500');
                    } else {
                        this.classList.remove('border-red-500', 'border-green-500');
                    }
                });
            }
        });
    </script>
</body>

</html>